The simplest way to navigate the parse tree is to say the name of the tag you want. If you want the <head> tag, just say soup.head:

	soup.head
	# <head><title>The Dormouse's story</title></head>

	soup.title
	# <title>The Dormouse's story</title>


Using a tag name as an attribute will give you only the first tag by that name:

	soup.a
	# <a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>

If you need to get all the <a> tags, or anything more complicated than the first tag with a certain name, you’ll need to use one of the methods described in Searching the tree, such as find_all():

	soup.find_all('a')
	# [<a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>,
	#  <a class="sister" href="http://example.com/lacie" id="link2">Lacie</a>,
	#  <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a>]

Given this: # <head><title>The Dormouse's story</title></head>
But the <title> tag itself has a child: the string “The Dormouse’s story”. There’s a sense in which that string is also a child of the <head> tag. The .descendants attribute lets you iterate over all of a tag’s children, recursively: its direct children, the children of its direct children, and so on:

	for child in head_tag.descendants:
    print(child)
	# <title>The Dormouse's story</title>
	# The Dormouse's story

If a tag contains more than one thing, then it’s not clear what .string should refer to, so .string is defined to be None:

	print(soup.html.string)
	# None

If there’s more than one thing inside a tag, you can still look at just the strings. Use the .strings generator:

	for string in soup.strings:
    print(repr(string))
	# u"The Dormouse's story"
	# u'\n\n'
	# u"The Dormouse's story"
	# u'\n\n'
	# u'Once upon a time there were three little sisters; and their names were\n'
	# u'Elsie'
	# u',\n'
	# u'Lacie'
	# u' and\n'
	# u'Tillie'
	# u';\nand they lived at the bottom of a well.'
	# u'\n\n'
	# u'...'
	# u'\n'

These strings tend to have a lot of extra whitespace, which you can remove by using the .stripped_strings generator instead:

	for string in soup.stripped_strings:
    print(repr(string))
	# u"The Dormouse's story"
	# u"The Dormouse's story"
	# u'Once upon a time there were three little sisters; and their names were'
	# u'Elsie'
	# u','
	# u'Lacie'
	# u'and'
	# u'Tillie'
	# u';\nand they lived at the bottom of a well.'
	# u'...'
